t.test(HW_6$Test.1, HW_6$Test.2, paired = TRUE, alternative = "less")
plasma <- read.csv(file="plasma.csv",header=TRUE)
plasma$time <- factor(plasma$time,levels=c("8am", "11am", "2pm", "5pm", "8pm"),
labels = c("8am", "11am", "2pm", "5pm", "8pm"))
plasma_model <- lm(plasma ~ time, data = plasma)
anova(plasma_model)
scores <- read.table(file="scores.txt",header=TRUE)
scores
transposed_df <- as.data.frame(t(scores), stringsAsFactors = FALSE)
colnames(transposed_df) <- transposed_df[1, ]
transposed_df <- transposed_df[-1, ]
transposed_df$ID <- rownames(transposed_df)
row.names(transposed_df) <- NULL
transposed_df
library(reshape2)
long_scores <- melt(data = transposed_df, id.vars = c("ID"),
measured.vars = c("Player1", "Player2"),
variable.name = "Player", value.name = "Score")
long_scores$Score <- as.numeric(long_scores$Score)
#you have to check for equality of variances before the t-test because it's a function call option not done automatically
var.test(long_scores$Score ~ long_scores$Player)
#reject null hypothesis that the variances are equal
t.test(long_scores$Score ~ long_scores$Player, var.equal = FALSE)
wilcox.test(long_scores$Score ~ long_scores$Player)
table <- matrix(data=c(15,29,27,19),nrow=2,ncol=2,byrow=TRUE,dimnames = list(c("Over 25 hours", "Under 25 hours"),c("Male", "Female")))
table <- t(table)
table
chisq.test(table)
Movies <- read.csv(file="Movies.csv",header=TRUE)
Movies
plot(x = Movies$Budget, y = Movies$USRevenue)
cor(x = Movies$Budget, y = Movies$USRevenue)
plot(x = Movies$Opening, y = Movies$USRevenue)
cor(x = Movies$Opening, y = Movies$USRevenue)
plot(x = Movies$Theaters, y = Movies$USRevenue)
cor(x = Movies$Theaters, y = Movies$USRevenue)
Opening_Model <- lm(x = Opening, y=USRevenue, data=Movies)
#setwd("~/Desktop/Personal_save/Stat_405_Module_14/Module_14_Homework")
setwd("C:/Users/jake pc/Desktop/Personal_save/Stat_405_Module_14/Module_14_Homework")
HW_6 <- read.csv(file="Homework_6.csv",header=TRUE)
HW_6
t.test(HW_6$Test.1, HW_6$Test.2, paired = TRUE)
t.test(HW_6$Test.1, HW_6$Test.2, paired = TRUE, alternative = "less")
plasma <- read.csv(file="plasma.csv",header=TRUE)
plasma$time <- factor(plasma$time,levels=c("8am", "11am", "2pm", "5pm", "8pm"),
labels = c("8am", "11am", "2pm", "5pm", "8pm"))
plasma_model <- lm(plasma ~ time, data = plasma)
anova(plasma_model)
scores <- read.table(file="scores.txt",header=TRUE)
scores
transposed_df <- as.data.frame(t(scores), stringsAsFactors = FALSE)
colnames(transposed_df) <- transposed_df[1, ]
transposed_df <- transposed_df[-1, ]
transposed_df$ID <- rownames(transposed_df)
row.names(transposed_df) <- NULL
transposed_df
library(reshape2)
long_scores <- melt(data = transposed_df, id.vars = c("ID"),
measured.vars = c("Player1", "Player2"),
variable.name = "Player", value.name = "Score")
long_scores$Score <- as.numeric(long_scores$Score)
#you have to check for equality of variances before the t-test because it's a function call option not done automatically
var.test(long_scores$Score ~ long_scores$Player)
#reject null hypothesis that the variances are equal
t.test(long_scores$Score ~ long_scores$Player, var.equal = FALSE)
wilcox.test(long_scores$Score ~ long_scores$Player)
table <- matrix(data=c(15,29,27,19),nrow=2,ncol=2,byrow=TRUE,dimnames = list(c("Over 25 hours", "Under 25 hours"),c("Male", "Female")))
table <- t(table)
table
chisq.test(table)
Movies <- read.csv(file="Movies.csv",header=TRUE)
Movies
plot(x = Movies$Budget, y = Movies$USRevenue)
cor(x = Movies$Budget, y = Movies$USRevenue)
plot(x = Movies$Opening, y = Movies$USRevenue)
cor(x = Movies$Opening, y = Movies$USRevenue)
plot(x = Movies$Theaters, y = Movies$USRevenue)
cor(x = Movies$Theaters, y = Movies$USRevenue)
Opening_Model <- lm(x = Opening, y=USRevenue, data=Movies)
#setwd("~/Desktop/Personal_save/Stat_405_Module_14/Module_14_Homework")
setwd("C:/Users/jake pc/Desktop/Personal_save/Stat_405_Module_14/Module_14_Homework")
HW_6 <- read.csv(file="Homework_6.csv",header=TRUE)
HW_6
t.test(HW_6$Test.1, HW_6$Test.2, paired = TRUE)
t.test(HW_6$Test.1, HW_6$Test.2, paired = TRUE, alternative = "less")
plasma <- read.csv(file="plasma.csv",header=TRUE)
plasma$time <- factor(plasma$time,levels=c("8am", "11am", "2pm", "5pm", "8pm"),
labels = c("8am", "11am", "2pm", "5pm", "8pm"))
plasma_model <- lm(plasma ~ time, data = plasma)
anova(plasma_model)
scores <- read.table(file="scores.txt",header=TRUE)
scores
transposed_df <- as.data.frame(t(scores), stringsAsFactors = FALSE)
colnames(transposed_df) <- transposed_df[1, ]
transposed_df <- transposed_df[-1, ]
transposed_df$ID <- rownames(transposed_df)
row.names(transposed_df) <- NULL
transposed_df
library(reshape2)
long_scores <- melt(data = transposed_df, id.vars = c("ID"),
measured.vars = c("Player1", "Player2"),
variable.name = "Player", value.name = "Score")
long_scores$Score <- as.numeric(long_scores$Score)
#you have to check for equality of variances before the t-test because it's a function call option not done automatically
var.test(long_scores$Score ~ long_scores$Player)
#reject null hypothesis that the variances are equal
t.test(long_scores$Score ~ long_scores$Player, var.equal = FALSE)
wilcox.test(long_scores$Score ~ long_scores$Player)
table <- matrix(data=c(15,29,27,19),nrow=2,ncol=2,byrow=TRUE,dimnames = list(c("Over 25 hours", "Under 25 hours"),c("Male", "Female")))
table <- t(table)
table
chisq.test(table)
Movies <- read.csv(file="Movies.csv",header=TRUE)
Movies
plot(x = Movies$Budget, y = Movies$USRevenue)
cor(x = Movies$Budget, y = Movies$USRevenue)
plot(x = Movies$Opening, y = Movies$USRevenue)
cor(x = Movies$Opening, y = Movies$USRevenue)
plot(x = Movies$Theaters, y = Movies$USRevenue)
cor(x = Movies$Theaters, y = Movies$USRevenue)
Opening_Model <- lm(USRevenue ~ Opening, data=Movies)
#setwd("~/Desktop/Personal_save/Stat_405_Module_14/Module_14_Homework")
setwd("C:/Users/jake pc/Desktop/Personal_save/Stat_405_Module_14/Module_14_Homework")
HW_6 <- read.csv(file="Homework_6.csv",header=TRUE)
HW_6
t.test(HW_6$Test.1, HW_6$Test.2, paired = TRUE)
t.test(HW_6$Test.1, HW_6$Test.2, paired = TRUE, alternative = "less")
plasma <- read.csv(file="plasma.csv",header=TRUE)
plasma$time <- factor(plasma$time,levels=c("8am", "11am", "2pm", "5pm", "8pm"),
labels = c("8am", "11am", "2pm", "5pm", "8pm"))
plasma_model <- lm(plasma ~ time, data = plasma)
anova(plasma_model)
scores <- read.table(file="scores.txt",header=TRUE)
scores
transposed_df <- as.data.frame(t(scores), stringsAsFactors = FALSE)
colnames(transposed_df) <- transposed_df[1, ]
transposed_df <- transposed_df[-1, ]
transposed_df$ID <- rownames(transposed_df)
row.names(transposed_df) <- NULL
transposed_df
library(reshape2)
long_scores <- melt(data = transposed_df, id.vars = c("ID"),
measured.vars = c("Player1", "Player2"),
variable.name = "Player", value.name = "Score")
long_scores$Score <- as.numeric(long_scores$Score)
#you have to check for equality of variances before the t-test because it's a function call option not done automatically
var.test(long_scores$Score ~ long_scores$Player)
#reject null hypothesis that the variances are equal
t.test(long_scores$Score ~ long_scores$Player, var.equal = FALSE)
wilcox.test(long_scores$Score ~ long_scores$Player)
table <- matrix(data=c(15,29,27,19),nrow=2,ncol=2,byrow=TRUE,dimnames = list(c("Over 25 hours", "Under 25 hours"),c("Male", "Female")))
table <- t(table)
table
chisq.test(table)
Movies <- read.csv(file="Movies.csv",header=TRUE)
Movies
plot(x = Movies$Budget, y = Movies$USRevenue)
cor(x = Movies$Budget, y = Movies$USRevenue)
plot(x = Movies$Opening, y = Movies$USRevenue)
cor(x = Movies$Opening, y = Movies$USRevenue)
plot(x = Movies$Theaters, y = Movies$USRevenue)
cor(x = Movies$Theaters, y = Movies$USRevenue)
Opening_Model <- lm(USRevenue ~ Opening, data=Movies)
summary(Opening_Model)
Opening_Model <- lm(USRevenue ~ Opening, data=Movies)
plot(USRevenue ~ Opening, data=Movies)
abline(a=intercept_slope[2],b=intercept_slope[1])
#setwd("~/Desktop/Personal_save/Stat_405_Module_14/Module_14_Homework")
setwd("C:/Users/jake pc/Desktop/Personal_save/Stat_405_Module_14/Module_14_Homework")
HW_6 <- read.csv(file="Homework_6.csv",header=TRUE)
HW_6
t.test(HW_6$Test.1, HW_6$Test.2, paired = TRUE)
t.test(HW_6$Test.1, HW_6$Test.2, paired = TRUE, alternative = "less")
plasma <- read.csv(file="plasma.csv",header=TRUE)
plasma$time <- factor(plasma$time,levels=c("8am", "11am", "2pm", "5pm", "8pm"),
labels = c("8am", "11am", "2pm", "5pm", "8pm"))
plasma_model <- lm(plasma ~ time, data = plasma)
anova(plasma_model)
scores <- read.table(file="scores.txt",header=TRUE)
scores
transposed_df <- as.data.frame(t(scores), stringsAsFactors = FALSE)
colnames(transposed_df) <- transposed_df[1, ]
transposed_df <- transposed_df[-1, ]
transposed_df$ID <- rownames(transposed_df)
row.names(transposed_df) <- NULL
transposed_df
library(reshape2)
long_scores <- melt(data = transposed_df, id.vars = c("ID"),
measured.vars = c("Player1", "Player2"),
variable.name = "Player", value.name = "Score")
long_scores$Score <- as.numeric(long_scores$Score)
#you have to check for equality of variances before the t-test because it's a function call option not done automatically
var.test(long_scores$Score ~ long_scores$Player)
#reject null hypothesis that the variances are equal
t.test(long_scores$Score ~ long_scores$Player, var.equal = FALSE)
wilcox.test(long_scores$Score ~ long_scores$Player)
table <- matrix(data=c(15,29,27,19),nrow=2,ncol=2,byrow=TRUE,dimnames = list(c("Over 25 hours", "Under 25 hours"),c("Male", "Female")))
table <- t(table)
table
chisq.test(table)
Movies <- read.csv(file="Movies.csv",header=TRUE)
Movies
plot(x = Movies$Budget, y = Movies$USRevenue)
cor(x = Movies$Budget, y = Movies$USRevenue)
plot(x = Movies$Opening, y = Movies$USRevenue)
cor(x = Movies$Opening, y = Movies$USRevenue)
plot(x = Movies$Theaters, y = Movies$USRevenue)
cor(x = Movies$Theaters, y = Movies$USRevenue)
Opening_Model <- lm(USRevenue ~ Opening, data=Movies)
plot(USRevenue ~ Opening, data=Movies)
intercept_slope <- coefficients(Opening_Model)
abline(a=intercept_slope[2],b=intercept_slope[1])
summary(Opening_Model)
abline(a=intercept_slope[1],b=intercept_slope[2])
#setwd("~/Desktop/Personal_save/Stat_405_Module_14/Module_14_Homework")
setwd("C:/Users/jake pc/Desktop/Personal_save/Stat_405_Module_14/Module_14_Homework")
HW_6 <- read.csv(file="Homework_6.csv",header=TRUE)
HW_6
t.test(HW_6$Test.1, HW_6$Test.2, paired = TRUE)
t.test(HW_6$Test.1, HW_6$Test.2, paired = TRUE, alternative = "less")
plasma <- read.csv(file="plasma.csv",header=TRUE)
plasma$time <- factor(plasma$time,levels=c("8am", "11am", "2pm", "5pm", "8pm"),
labels = c("8am", "11am", "2pm", "5pm", "8pm"))
plasma_model <- lm(plasma ~ time, data = plasma)
anova(plasma_model)
scores <- read.table(file="scores.txt",header=TRUE)
scores
transposed_df <- as.data.frame(t(scores), stringsAsFactors = FALSE)
colnames(transposed_df) <- transposed_df[1, ]
transposed_df <- transposed_df[-1, ]
transposed_df$ID <- rownames(transposed_df)
row.names(transposed_df) <- NULL
transposed_df
library(reshape2)
long_scores <- melt(data = transposed_df, id.vars = c("ID"),
measured.vars = c("Player1", "Player2"),
variable.name = "Player", value.name = "Score")
long_scores$Score <- as.numeric(long_scores$Score)
#you have to check for equality of variances before the t-test because it's a function call option not done automatically
var.test(long_scores$Score ~ long_scores$Player)
#reject null hypothesis that the variances are equal
t.test(long_scores$Score ~ long_scores$Player, var.equal = FALSE)
wilcox.test(long_scores$Score ~ long_scores$Player)
table <- matrix(data=c(15,29,27,19),nrow=2,ncol=2,byrow=TRUE,dimnames = list(c("Over 25 hours", "Under 25 hours"),c("Male", "Female")))
table <- t(table)
table
chisq.test(table)
Movies <- read.csv(file="Movies.csv",header=TRUE)
Movies
plot(x = Movies$Budget, y = Movies$USRevenue)
cor(x = Movies$Budget, y = Movies$USRevenue)
plot(x = Movies$Opening, y = Movies$USRevenue)
cor(x = Movies$Opening, y = Movies$USRevenue)
plot(x = Movies$Theaters, y = Movies$USRevenue)
cor(x = Movies$Theaters, y = Movies$USRevenue)
Opening_Model <- lm(USRevenue ~ Opening, data=Movies)
plot(USRevenue ~ Opening, data=Movies)
intercept_slope <- coefficients(Opening_Model)
abline(a=intercept_slope[1],b=intercept_slope[2])
summary(Opening_Model)
intercept_slope
Opening_Model <- lm(USRevenue ~ Opening, data=Movies)
plot(USRevenue ~ Opening, data=Movies)
intercept_slope <- coefficients(Opening_Model)
abline(a=intercept_slope[1],b=intercept_slope[2])
predicted_USRevenue <- predict(Opening_Model, newdata = data.frame(age = 38.7))
#setwd("~/Desktop/Personal_save/Stat_405_Module_14/Module_14_Homework")
setwd("C:/Users/jake pc/Desktop/Personal_save/Stat_405_Module_14/Module_14_Homework")
HW_6 <- read.csv(file="Homework_6.csv",header=TRUE)
HW_6
t.test(HW_6$Test.1, HW_6$Test.2, paired = TRUE)
t.test(HW_6$Test.1, HW_6$Test.2, paired = TRUE, alternative = "less")
plasma <- read.csv(file="plasma.csv",header=TRUE)
plasma$time <- factor(plasma$time,levels=c("8am", "11am", "2pm", "5pm", "8pm"),
labels = c("8am", "11am", "2pm", "5pm", "8pm"))
plasma_model <- lm(plasma ~ time, data = plasma)
anova(plasma_model)
scores <- read.table(file="scores.txt",header=TRUE)
scores
transposed_df <- as.data.frame(t(scores), stringsAsFactors = FALSE)
colnames(transposed_df) <- transposed_df[1, ]
transposed_df <- transposed_df[-1, ]
transposed_df$ID <- rownames(transposed_df)
row.names(transposed_df) <- NULL
transposed_df
library(reshape2)
long_scores <- melt(data = transposed_df, id.vars = c("ID"),
measured.vars = c("Player1", "Player2"),
variable.name = "Player", value.name = "Score")
long_scores$Score <- as.numeric(long_scores$Score)
#you have to check for equality of variances before the t-test because it's a function call option not done automatically
var.test(long_scores$Score ~ long_scores$Player)
#reject null hypothesis that the variances are equal
t.test(long_scores$Score ~ long_scores$Player, var.equal = FALSE)
wilcox.test(long_scores$Score ~ long_scores$Player)
table <- matrix(data=c(15,29,27,19),nrow=2,ncol=2,byrow=TRUE,dimnames = list(c("Over 25 hours", "Under 25 hours"),c("Male", "Female")))
table <- t(table)
table
chisq.test(table)
Movies <- read.csv(file="Movies.csv",header=TRUE)
Movies
plot(x = Movies$Budget, y = Movies$USRevenue)
cor(x = Movies$Budget, y = Movies$USRevenue)
plot(x = Movies$Opening, y = Movies$USRevenue)
cor(x = Movies$Opening, y = Movies$USRevenue)
plot(x = Movies$Theaters, y = Movies$USRevenue)
cor(x = Movies$Theaters, y = Movies$USRevenue)
Opening_Model <- lm(USRevenue ~ Opening, data=Movies)
plot(USRevenue ~ Opening, data=Movies)
intercept_slope <- coefficients(Opening_Model)
abline(a=intercept_slope[1],b=intercept_slope[2])
summary(Opening_Model)
predicted_USRevenue <- predict(Opening_Model, newdata = data.frame(age = 38.7))
#setwd("~/Desktop/Personal_save/Stat_405_Module_14/Module_14_Homework")
setwd("C:/Users/jake pc/Desktop/Personal_save/Stat_405_Module_14/Module_14_Homework")
HW_6 <- read.csv(file="Homework_6.csv",header=TRUE)
HW_6
t.test(HW_6$Test.1, HW_6$Test.2, paired = TRUE)
t.test(HW_6$Test.1, HW_6$Test.2, paired = TRUE, alternative = "less")
plasma <- read.csv(file="plasma.csv",header=TRUE)
plasma$time <- factor(plasma$time,levels=c("8am", "11am", "2pm", "5pm", "8pm"),
labels = c("8am", "11am", "2pm", "5pm", "8pm"))
plasma_model <- lm(plasma ~ time, data = plasma)
anova(plasma_model)
scores <- read.table(file="scores.txt",header=TRUE)
scores
transposed_df <- as.data.frame(t(scores), stringsAsFactors = FALSE)
colnames(transposed_df) <- transposed_df[1, ]
transposed_df <- transposed_df[-1, ]
transposed_df$ID <- rownames(transposed_df)
row.names(transposed_df) <- NULL
transposed_df
library(reshape2)
long_scores <- melt(data = transposed_df, id.vars = c("ID"),
measured.vars = c("Player1", "Player2"),
variable.name = "Player", value.name = "Score")
long_scores$Score <- as.numeric(long_scores$Score)
#you have to check for equality of variances before the t-test because it's a function call option not done automatically
var.test(long_scores$Score ~ long_scores$Player)
#reject null hypothesis that the variances are equal
t.test(long_scores$Score ~ long_scores$Player, var.equal = FALSE)
wilcox.test(long_scores$Score ~ long_scores$Player)
table <- matrix(data=c(15,29,27,19),nrow=2,ncol=2,byrow=TRUE,dimnames = list(c("Over 25 hours", "Under 25 hours"),c("Male", "Female")))
table <- t(table)
table
chisq.test(table)
Movies <- read.csv(file="Movies.csv",header=TRUE)
Movies
plot(x = Movies$Budget, y = Movies$USRevenue)
cor(x = Movies$Budget, y = Movies$USRevenue)
plot(x = Movies$Opening, y = Movies$USRevenue)
cor(x = Movies$Opening, y = Movies$USRevenue)
plot(x = Movies$Theaters, y = Movies$USRevenue)
cor(x = Movies$Theaters, y = Movies$USRevenue)
Opening_Model <- lm(USRevenue ~ Opening, data=Movies)
plot(USRevenue ~ Opening, data=Movies)
intercept_slope <- coefficients(Opening_Model)
abline(a=intercept_slope[1],b=intercept_slope[2])
summary(Opening_Model)
predicted_USRevenue <- predict(Opening_Model, newdata = data.frame(Opening = 38.7))
predicted_USRevenue
#setwd("~/Desktop/Personal_save/Stat_405_Module_14/Module_14_Homework")
setwd("C:/Users/jake pc/Desktop/Personal_save/Stat_405_Module_14/Module_14_Homework")
HW_6 <- read.csv(file="Homework_6.csv",header=TRUE)
HW_6
t.test(HW_6$Test.1, HW_6$Test.2, paired = TRUE)
t.test(HW_6$Test.1, HW_6$Test.2, paired = TRUE, alternative = "less")
plasma <- read.csv(file="plasma.csv",header=TRUE)
plasma$time <- factor(plasma$time,levels=c("8am", "11am", "2pm", "5pm", "8pm"),
labels = c("8am", "11am", "2pm", "5pm", "8pm"))
plasma_model <- lm(plasma ~ time, data = plasma)
anova(plasma_model)
scores <- read.table(file="scores.txt",header=TRUE)
scores
transposed_df <- as.data.frame(t(scores), stringsAsFactors = FALSE)
colnames(transposed_df) <- transposed_df[1, ]
transposed_df <- transposed_df[-1, ]
transposed_df$ID <- rownames(transposed_df)
row.names(transposed_df) <- NULL
transposed_df
library(reshape2)
long_scores <- melt(data = transposed_df, id.vars = c("ID"),
measured.vars = c("Player1", "Player2"),
variable.name = "Player", value.name = "Score")
long_scores$Score <- as.numeric(long_scores$Score)
#you have to check for equality of variances before the t-test because it's a function call option not done automatically
var.test(long_scores$Score ~ long_scores$Player)
#reject null hypothesis that the variances are equal
t.test(long_scores$Score ~ long_scores$Player, var.equal = FALSE)
wilcox.test(long_scores$Score ~ long_scores$Player)
table <- matrix(data=c(15,29,27,19),nrow=2,ncol=2,byrow=TRUE,dimnames = list(c("Over 25 hours", "Under 25 hours"),c("Male", "Female")))
table <- t(table)
table
chisq.test(table)
Movies <- read.csv(file="Movies.csv",header=TRUE)
Movies
plot(x = Movies$Budget, y = Movies$USRevenue)
cor(x = Movies$Budget, y = Movies$USRevenue)
plot(x = Movies$Opening, y = Movies$USRevenue)
cor(x = Movies$Opening, y = Movies$USRevenue)
plot(x = Movies$Theaters, y = Movies$USRevenue)
cor(x = Movies$Theaters, y = Movies$USRevenue)
Opening_Model <- lm(USRevenue ~ Opening, data=Movies)
plot(USRevenue ~ Opening, data=Movies)
intercept_slope <- coefficients(Opening_Model)
abline(a=intercept_slope[1],b=intercept_slope[2])
summary(Opening_Model)
predicted_USRevenue <- predict(Opening_Model, newdata = data.frame(Opening = 38.7))
Cat("The linear model predicts that at a opening weekend revenue of 38.7 million dollars the totall US Revenue will be", predicted_USRevenue, "Million dollars.")
#setwd("~/Desktop/Personal_save/Stat_405_Module_14/Module_14_Homework")
setwd("C:/Users/jake pc/Desktop/Personal_save/Stat_405_Module_14/Module_14_Homework")
HW_6 <- read.csv(file="Homework_6.csv",header=TRUE)
HW_6
t.test(HW_6$Test.1, HW_6$Test.2, paired = TRUE)
t.test(HW_6$Test.1, HW_6$Test.2, paired = TRUE, alternative = "less")
plasma <- read.csv(file="plasma.csv",header=TRUE)
plasma$time <- factor(plasma$time,levels=c("8am", "11am", "2pm", "5pm", "8pm"),
labels = c("8am", "11am", "2pm", "5pm", "8pm"))
plasma_model <- lm(plasma ~ time, data = plasma)
anova(plasma_model)
scores <- read.table(file="scores.txt",header=TRUE)
scores
transposed_df <- as.data.frame(t(scores), stringsAsFactors = FALSE)
colnames(transposed_df) <- transposed_df[1, ]
transposed_df <- transposed_df[-1, ]
transposed_df$ID <- rownames(transposed_df)
row.names(transposed_df) <- NULL
transposed_df
library(reshape2)
long_scores <- melt(data = transposed_df, id.vars = c("ID"),
measured.vars = c("Player1", "Player2"),
variable.name = "Player", value.name = "Score")
long_scores$Score <- as.numeric(long_scores$Score)
#you have to check for equality of variances before the t-test because it's a function call option not done automatically
var.test(long_scores$Score ~ long_scores$Player)
#reject null hypothesis that the variances are equal
t.test(long_scores$Score ~ long_scores$Player, var.equal = FALSE)
wilcox.test(long_scores$Score ~ long_scores$Player)
table <- matrix(data=c(15,29,27,19),nrow=2,ncol=2,byrow=TRUE,dimnames = list(c("Over 25 hours", "Under 25 hours"),c("Male", "Female")))
table <- t(table)
table
chisq.test(table)
Movies <- read.csv(file="Movies.csv",header=TRUE)
Movies
plot(x = Movies$Budget, y = Movies$USRevenue)
cor(x = Movies$Budget, y = Movies$USRevenue)
plot(x = Movies$Opening, y = Movies$USRevenue)
cor(x = Movies$Opening, y = Movies$USRevenue)
plot(x = Movies$Theaters, y = Movies$USRevenue)
cor(x = Movies$Theaters, y = Movies$USRevenue)
Opening_Model <- lm(USRevenue ~ Opening, data=Movies)
plot(USRevenue ~ Opening, data=Movies)
intercept_slope <- coefficients(Opening_Model)
abline(a=intercept_slope[1],b=intercept_slope[2])
summary(Opening_Model)
predicted_USRevenue <- predict(Opening_Model, newdata = data.frame(Opening = 38.7))
cat("The linear model predicts that at a opening weekend revenue of 38.7 million dollars the totall US Revenue will be", predicted_USRevenue, "Million dollars.")
predicted_USRevenue <- predict(Opening_Model, newdata = data.frame(Opening = 38.7))
predicted_USRevenue
predicted_USRevenue <- predict(Opening_Model, newdata = data.frame(Opening = 38.7))
predicted_USRevenue
cat("The linear model predictes that the movie Get Smart which had an opening weekend revenue of 38.7 million dollars would have a total US Revenue of", predicted_USRevenue,"million dollars.")
predicted_USRevenue <- predict(Opening_Model, newdata = data.frame(Opening = 38.7))
cat("The linear model predictes that the movie Get Smart which had an opening weekend revenue of 38.7 million dollars would have a total US Revenue of", predicted_USRevenue,"million dollars.")
#setwd("~/Desktop/Personal_save/Stat_405_Module_14/Module_14_Homework")
setwd("C:/Users/jake pc/Desktop/Personal_save/Stat_405_Module_14/Module_14_Homework")
HW_6 <- read.csv(file="Homework_6.csv",header=TRUE)
HW_6
t.test(HW_6$Test.1, HW_6$Test.2, paired = TRUE)
t.test(HW_6$Test.1, HW_6$Test.2, paired = TRUE, alternative = "less")
plasma <- read.csv(file="plasma.csv",header=TRUE)
plasma$time <- factor(plasma$time,levels=c("8am", "11am", "2pm", "5pm", "8pm"),
labels = c("8am", "11am", "2pm", "5pm", "8pm"))
plasma_model <- lm(plasma ~ time, data = plasma)
anova(plasma_model)
scores <- read.table(file="scores.txt",header=TRUE)
scores
transposed_df <- as.data.frame(t(scores), stringsAsFactors = FALSE)
colnames(transposed_df) <- transposed_df[1, ]
transposed_df <- transposed_df[-1, ]
transposed_df$ID <- rownames(transposed_df)
row.names(transposed_df) <- NULL
transposed_df
library(reshape2)
long_scores <- melt(data = transposed_df, id.vars = c("ID"),
measured.vars = c("Player1", "Player2"),
variable.name = "Player", value.name = "Score")
long_scores$Score <- as.numeric(long_scores$Score)
#you have to check for equality of variances before the t-test because it's a function call option not done automatically
var.test(long_scores$Score ~ long_scores$Player)
#reject null hypothesis that the variances are equal
t.test(long_scores$Score ~ long_scores$Player, var.equal = FALSE)
wilcox.test(long_scores$Score ~ long_scores$Player)
table <- matrix(data=c(15,29,27,19),nrow=2,ncol=2,byrow=TRUE,dimnames = list(c("Over 25 hours", "Under 25 hours"),c("Male", "Female")))
table <- t(table)
table
chisq.test(table)
Movies <- read.csv(file="Movies.csv",header=TRUE)
Movies
plot(x = Movies$Budget, y = Movies$USRevenue)
cor(x = Movies$Budget, y = Movies$USRevenue)
plot(x = Movies$Opening, y = Movies$USRevenue)
cor(x = Movies$Opening, y = Movies$USRevenue)
plot(x = Movies$Theaters, y = Movies$USRevenue)
cor(x = Movies$Theaters, y = Movies$USRevenue)
Opening_Model <- lm(USRevenue ~ Opening, data=Movies)
plot(USRevenue ~ Opening, data=Movies)
intercept_slope <- coefficients(Opening_Model)
abline(a=intercept_slope[1],b=intercept_slope[2])
summary(Opening_Model)
predicted_USRevenue <- predict(Opening_Model, newdata = data.frame(Opening = 38.7))
cat("The linear model predictes that the movie Get Smart which had an opening weekend revenue of 38.7 million dollars would have a total US Revenue of", predicted_USRevenue,"million dollars.")
